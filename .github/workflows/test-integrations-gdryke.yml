# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

name: test-integrations-gdryke

on: 
  push:
  workflow_dispatch:

env:
  TEST_RESULTS_DIR: /tmp/test-results
  TEST_RESULTS_ARTIFACT_NAME: test-results
  CONSUL_LICENSE: ${{ secrets.CONSUL_LICENSE }}
  GOTAGS: ${{ endsWith(github.repository, '-enterprise') && 'consulent' || '' }}
  GOTESTSUM_VERSION: "1.9.0"
  CONSUL_BINARY_UPLOAD_NAME: consul-bin
  CONSUL_LATEST_IMAGE_NAME: ${{ github.repository }}

jobs:
  setup:
    runs-on: ubuntu-latest
    name: Setup
    outputs:
      compute-small: ${{ steps.runners.outputs.compute-small }}
      compute-medium: ${{ steps.runners.outputs.compute-medium }}
      compute-large: ${{ steps.runners.outputs.compute-large }}
      compute-xl: ${{ steps.runners.outputs.compute-xl }}
      enterprise: ${{ steps.runners.outputs.enterprise }}
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - id: runners
        run: .github/scripts/get_runner_classes.sh

  dev-build:
    needs: [setup]
    uses: ./.github/workflows/reusable-dev-build.yml
    with:
      runs-on: imagegenteam-ubuntu2204-16cores
      repository-name: ${{ github.repository }}
      uploaded-binary-name: 'consul-bin'
    secrets:
      elevated-github-token: ${{ secrets.ELEVATED_GITHUB_TOKEN }}

  compatibility-integration-test:
    runs-on: koliada-consul-1
    needs:
      - setup
      - dev-build
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version-file: 'go.mod'
      - run: go env
      - name: Setup gotestsum
        uses: autero1/action-gotestsum@2e48af62f5248bd3b014f598cd1aa69a01dd36e3 # v1.0.0
        with:
          gotestsum_version: ${{ env.GOTESTSUM_VERSION }}

      # Build the consul:local image from the already built binary
      - name: fetch binary
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: '${{ env.CONSUL_BINARY_UPLOAD_NAME }}'
          path: .
      - name: restore mode+x
        run: chmod +x consul
      - name: Build consul:local image
        run: |
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          sudo echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update
          sudo apt install -y docker-ce
          docker build -t consul:local -f ./build-support/docker/Consul-Dev.dockerfile .
      - name: Compatibility Integration Tests
        run: |
          cat /etc/hosts && echo "-----------"
          sudo sed -i 's/::1 *localhost ip6-localhost ip6-loopback/::1 ip6-localhost ip6-loopback/g' /etc/hosts
          cat /etc/hosts
          mkdir -p "/tmp/test-results"
          cd ./test/integration/consul-container/test
          sudo sysctl -w net.ipv4.tcp_tw_reuse=1
          docker run --rm consul:local consul version
          # shellcheck disable=SC2046
          gotestsum \
            --raw-command \
            --format=short-verbose \
            --packages="./..." \
            -- \
            go test \
            -tags "" \
            -timeout=30m \
            -p=4 \
            -json \
            $(go list ./... | grep -v upgrade) \
            --target-image consul \
            --target-version local \
            --latest-image consul \
            --latest-version latest
            ls -lrt
      - name: dump docker
        if: always()
        run: |
          docker system info
          docker network ls | grep -v NETWORK | awk '{print $1}' | xargs -I {} docker network inspect {}
          cat /etc/hosts
        env:
          # this is needed because of incompatibility between RYUK container and circleci
          GOTESTSUM_JUNITFILE: ${{ env.TEST_RESULTS_DIR }}/results.xml
          GOTESTSUM_FORMAT: standard-verbose
          COMPOSE_INTERACTIVE_NO_CLI: 1
          # tput complains if this isn't set to something.
          TERM: ansi

      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: ${{ env.TEST_RESULTS_ARTIFACT_NAME }}
          path: ${{ env.TEST_RESULTS_DIR }}

  upgrade-integration-test:
    runs-on: koliada-consul-1
    needs:
      - setup
      - dev-build
    strategy:
      matrix:
        consul-version: [ "1.14", "1.15"]
    env:
      CONSUL_VERSION: ${{ matrix.consul-version }}
    steps:
      - run: |
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          sudo echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update
          sudo apt install -y docker-ce
          cat /etc/hosts && echo "-----------"
          sudo sed -i 's/::1 *localhost ip6-localhost ip6-loopback/::1 ip6-localhost ip6-loopback/g' /etc/hosts
          cat /etc/hosts
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version-file: 'go.mod'
      - run: go env
      - name: Setup gotestsum
        uses: autero1/action-gotestsum@2e48af62f5248bd3b014f598cd1aa69a01dd36e3 # v1.0.0
        with:
          gotestsum_version: ${{ env.GOTESTSUM_VERSION }}

      # Get go binary from workspace
      - name: fetch binary
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: '${{ env.CONSUL_BINARY_UPLOAD_NAME }}'
          path: .
      - name: restore mode+x
        run: chmod +x consul
      - name: Build consul:local image
        run: |
          docker build -t consul:local -f ./build-support/docker/Consul-Dev.dockerfile .
      - name: Upgrade Integration Tests
        run: |
          mkdir -p "${{ env.TEST_RESULTS_DIR }}"
          sudo sysctl -w net.ipv4.tcp_tw_reuse=1
          cd ./test/integration/consul-container/test/upgrade
          docker run --rm consul:local consul version
          PACKAGE_NAMES=$(go list -tags "${{ env.GOTAGS }}" ./...)
          gotestsum \
            --raw-command \
            --format=testname \
            --packages="${PACKAGE_NAMES}" \
            -- \
            go test \
            -tags "${{ env.GOTAGS }}" \
            -timeout=30m \
            -p=4 \
            -json \
            ./... \
            --target-image consul \
            --target-version local \
            --latest-image consul \
            --latest-version "${{ env.CONSUL_VERSION }}"
          ls -lrt
      - name: dump docker
        if: always()
        run: |
          docker system info
          docker network ls | grep -v NETWORK | awk '{print $1}' | xargs -I {} docker network inspect {}
          cat /etc/hosts
        env:
          # this is needed because of incompatibility between RYUK container and circleci
          GOTESTSUM_JUNITFILE: ${{ env.TEST_RESULTS_DIR }}/results.xml
          GOTESTSUM_FORMAT: standard-verbose
          COMPOSE_INTERACTIVE_NO_CLI: 1
          # tput complains if this isn't set to something.
          TERM: ansi
      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: ${{ env.TEST_RESULTS_ARTIFACT_NAME }}
          path: ${{ env.TEST_RESULTS_DIR }}
